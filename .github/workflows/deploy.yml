name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set App Version
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          docker build -t ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:$APP_VERSION .
          docker push ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:$APP_VERSION

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Modify Docker Compose
        run: |
          sed -i "s|image: ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:.*|image: ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:${APP_VERSION}|g" docker-compose.yml

      # - name: Commit and Push Changes
      #   run: |
      #     git config --global user.email "actions@github.com"
      #     git config --global user.name "GitHub Actions"
      #     git add docker-compose.yml
      #     git commit -m "Update docker-compose.yml with new image tag $APP_VERSION"
      #     git push origin main

  deploy-vps:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Docker Compose and Nginx Config to VPS
        run: |
          sshpass -p ${{secrets.SSH_PASSWORD}} rsync -r --exclude='.git' docker-compose.yml ${{secrets.SSH_USER}}@${{secrets.SERVER_HOST}}:/app
          sshpass -p ${{secrets.SSH_PASSWORD}} rsync -r --exclude='.git' nginx/nginx.conf ${{secrets.SSH_USER}}@${{secrets.SERVER_HOST}}:/app/nginx

      - name: Deploy to VPS
        run: ssh ${{secrets.SSH_USER}}@${{secrets.SERVER_HOST}} "cd /app && docker-compose pull && docker-compose up -d"