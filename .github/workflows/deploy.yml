name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set App Version
        run: echo "APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          docker build -t ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:latest .
          docker push ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:latest

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Modify Docker Compose
  #       run: |
  #         sed -i "s|image: ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:.*|image: ghcr.io/${{ github.actor }}/${{ github.repository }}/myapp:${APP_VERSION}|g" docker-compose.yml

  deploy-vps:
    runs-on: ubuntu-latest
    # needs: release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy Docker Compose and Nginx Config to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          source: docker-compose.yml, nginx/nginx.conf
          target: ~/app
      
      - name: Pull and Run Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd ~/app 
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose pull && docker compose up -d
          # script: |
          #   sshpass -p ${{secrets.SSH_PASSWORD}} rsync -r --exclude='.git' docker-compose.yml ${{secrets.SSH_USER}}@${{secrets.SERVER_HOST}}:/app
          #   sshpass -p ${{secrets.SSH_PASSWORD}} rsync -r --exclude='.git' nginx/nginx.conf ${{secrets.SSH_USER}}@${{secrets.SERVER_HOST}}:/app/nginx
          #   cd ~/app && docker-compose pull && docker-compose up -d